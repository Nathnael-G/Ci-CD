name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install flask

      #- name: Run unit tests
       # run: |
        #  pytest

  static-analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SonarQube Scanner
        run: |
          curl -sS https://get.sonarsource.com/sonar-scanner-cli-4.6.2.2472-linux.zip | unzip -
          export PATH=$PATH:$GITHUB_WORKSPACE/sonar-scanner-4.6.2.2472-linux/bin

      - name: Run SonarQube analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my-app \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  dynamic-analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start application (ensure it's running)
        run: |
          nohup python app.py &  # Start your Flask app in the background

      - name: Run OWASP ZAP scan
        run: |
          docker run --network host owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:5000 \
            -r zap_report.html
